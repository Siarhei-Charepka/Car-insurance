Для написания автотестов я для начала определил набор минимальных требований к моей программе. В моем случае это:

1) Программа должна всегда возвращать минимальную сумму страховки, если расчетная стоимость ниже минимума:
     210 рублей

2) Программа должна правильно рассчитывать страховку при изменении стажа водителя:
     а) > 5 лет   + 100 рублей, 
     б) 1 - 5 лет   + 200 рублей, 
     в) < 1 года  + 300 рублей

3) Программа должна правильно рассчитывать страховку при изменении коффициента аварийности:
     а) нет аварий    коэф.  0,9, 
     б) 1 авария      коэф.  1,5, 
     в) 2 аварии      коэф.  2,5, 
     г) > 2 аварий    коэф.  4

4) Программа должна правильно рассчитывать страховку при изменении коффициента мощности двигателя:
     а) до 50         коэф.  0,6, 
     б) 51 - 100      коэф.  1,
     в) 101 - 150     коэф.  1,4,
     г) 151 и выше    коэф.  1,6

5) Прогорамма должна реагировать на невалидные данные и бросать исключение. К невалидным данным отнесены отрицательные значения


Для тестирования 1 - 4 пункта я решил использовать тест с параметрами (DDT) с передачей тестовых данных через json файл (carClientData.json). Такое решение мне показалось более логичным и удобным. Для каждого случая можно определять свой набор входных параметров и ожидаемого результата.

Для тестирования пункта 5 был написан отдельный тест на ожидаемое исключение при наличии отрицательных значений параметров.

В файле carClientData.json я представил примерный набор тестовых данных. В рамках реального проекта удобство решения позволяет гибко настравать и передавать в тест те данные, которые будут удовлетворять требования проекта.

Тесты запускаются в параллели, что позволяет сократить время тестирования в случае большого количества тестовых данных.

Из возможных улучшений я бы отметил сокращение набора тестовых данных с написанием отдельных тестов для методов расчета каждого коэффициента. Так же можно рассмотреть дополнительно обработку исключительных ситуаций при изменении типов и значений параметров (String, null)
